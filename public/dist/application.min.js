"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ngMessages","ui.router","ui.bootstrap","ui.utils","angularFileUpload"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$httpProvider",function($locationProvider,$httpProvider){$locationProvider.html5Mode(!0).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor")}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["$rootScope","$state","Authentication",function($rootScope,$state,Authentication){function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){var allowed=!1;toState.data.roles.forEach(function(role){return"guest"===role||Authentication.user&&void 0!==Authentication.user.roles&&-1!==Authentication.user.roles.indexOf(role)?(allowed=!0,!0):void 0}),allowed||(event.preventDefault(),void 0!==Authentication.user&&"object"==typeof Authentication.user?$state.go("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){storePreviousState(fromState,fromParams)})}]),angular.element(document).ready(function(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("automata",["windows","ui.bootstrap"]),ApplicationConfiguration.registerModule("itsADrag"),ApplicationConfiguration.registerModule("resizeIt"),ApplicationConfiguration.registerModule("windows",["itsADrag","resizeIt"]),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("core.admin",["core"]),ApplicationConfiguration.registerModule("core.admin.routes",["ui.router"]),ApplicationConfiguration.registerModule("users",["core"]),ApplicationConfiguration.registerModule("users.admin",["core.admin"]),ApplicationConfiguration.registerModule("users.admin.routes",["core.admin.routes"]),angular.module("automata").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Automata",state:"automata",type:"dropdown",roles:["*"]}),Menus.addSubMenuItem("topbar","automata",{title:"List Automata",state:"automata.list"}),Menus.addSubMenuItem("topbar","automata",{title:"Create New Turing Machine",state:"automata.create-tm",roles:["user"]}),Menus.addSubMenuItem("topbar","automata",{title:"Create New Finite State Automaton",state:"automata.create-fsa",roles:["user"]}),Menus.addSubMenuItem("topbar","automata",{title:"Create New Pushdown Automaton",state:"automata.create-pda",roles:["user"]})}]),angular.module("automata").config(["$stateProvider",function($stateProvider){$stateProvider.state("automata",{"abstract":!0,url:"/automata",template:"<ui-view/>"}).state("automata.list",{url:"",templateUrl:"modules/automata/client/views/list-automata.client.view.html"}).state("automata.create-tm",{url:"/create-tm",templateUrl:"modules/automata/client/views/create-automaton.client.view.html",data:{roles:["user","admin"],type:"tm"}}).state("automata.create-fsa",{url:"/create-fsa",templateUrl:"modules/automata/client/views/create-automaton.client.view.html",data:{roles:["user","admin"],type:"fsa"}}).state("automata.create-pda",{url:"/create-pda",templateUrl:"modules/automata/client/views/create-automaton.client.view.html",data:{roles:["user","admin"],type:"pda"}}).state("automata.view",{url:"/:automatonId",templateUrl:"modules/automata/client/views/view-automaton.client.view.html",data:{roles:["user","admin"]}})}]),angular.module("automata").controller("AddEdgeModalController",["$scope","$uibModal","$log",function($scope,$uibModal,$log){$scope.open=function(size,addedEntities){var modalInstance=$uibModal.open({animation:!0,templateUrl:"addEdgeModalContent.html",controller:"AddEdgeModalInstanceCtrl",backdrop:"static",size:size,resolve:{addedEntities:function(){return addedEntities}}});modalInstance.result.then(function(){},function(){$log.info("Modal dismissed at: "+new Date)})}}]),angular.module("automata").controller("AddEdgeModalInstanceCtrl",["$scope","$uibModalInstance","addedEntities",function($scope,$uibModalInstance,addedEntities){$scope.addedEntities=addedEntities,$scope.ok=function(){var read=$scope.labels.read.toUpperCase(),act=$scope.labels.act.toUpperCase();addedEntities.data("read",read),addedEntities.data("action",act),addedEntities.data("label",read+":"+act),$uibModalInstance.close()},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}]),angular.module("automata").controller("AutomataController",["$scope","$state","$stateParams","$location","$timeout","$window","Authentication","Automata","automatonGraph",function($scope,$state,$stateParams,$location,$timeout,$window,Authentication,Automata,automatonGraph){function setUpGraph(){automatonGraph($scope.automaton.eles).then(function(automatonCy){cy=automatonCy,$scope.cyLoaded=!0})}for(var cy,empty_tape=[],i=0;50>i;i++)empty_tape.push(" ");$scope.authentication=Authentication,$scope.labels={read:"",act:""},$scope.createOrUpdate=function(isValid){$scope.automaton._id?$scope.update(isValid):$scope.create(isValid)},$scope.create=function(isValid){if($scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","automatonForm"),!1;$scope.automaton.eles.nodes=cy.nodes().jsons(),$scope.automaton.eles.edges=cy.edges().jsons();var automaton=$scope.automaton;automaton.$save(function(response){$scope.automaton=Automata.get({automatonId:response._id},function(){})},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(automaton){if(automaton){automaton.$remove();for(var i in $scope.automata)$scope.automata[i]===automaton&&$scope.automata.splice(i,1)}else $scope.automaton.$remove(function(){$location.path("automata")})},$scope.update=function(isValid){if($scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","automatonForm"),!1;$scope.automaton.eles.nodes=cy.nodes().jsons(),$scope.automaton.eles.edges=cy.edges().jsons();var automaton=$scope.automaton;automaton.$update(function(){},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.automata=Automata.query()},$scope.findOne=function(){$scope.automaton=Automata.get({automatonId:$stateParams.automatonId},function(){setUpGraph()})},$scope.onTextClick=function($event){$event.target.blur(),$event.target.focus()},$scope.focusNext=function(event,index){var nextInd;8===event.keyCode?($scope.automaton.tape.contents[index]=String.fromCharCode(event.keyCode),nextInd=index>0?index-1:index):37===event.keyCode?index>0?nextInd=index-1:($scope.automaton.tape.contents.unshift(" "),nextInd=0,angular.element(document.querySelector(".cell-"+nextInd))[0].blur()):($scope.automaton.tape.contents[index]=String.fromCharCode(event.keyCode),nextInd=index+1,$scope.automaton.tape.contents.length===nextInd&&$scope.automaton.tape.contents.push(" ")),$timeout(function(){angular.element(document.querySelector(".cell-"+nextInd))[0].focus()},0)},$state.current.data&&$state.current.data.type&&($scope.automaton=new Automata({title:"untitled automaton",machine:$state.current.data.type,eles:{nodes:[{data:{id:"start"},classes:"startmarker"},{data:{id:"0",start:!0},classes:"enode",position:{x:0,y:0}}],edges:[]},tape:{position:0,contents:empty_tape}}),setUpGraph())}]),angular.module("itsADrag",[]).directive("draggable",[function(){return{restrict:"AE",link:function(scope,el,attrs){scope.minimized=!1,scope.obj={id:null,content:"",group:null},scope.placeholder=!1,scope.obj.content=el.html(),angular.isDefined(attrs.id)&&(scope.obj.id=attrs.id),angular.isDefined(attrs.placeholder)&&(scope.placeholder=scope.$eval(attrs.placeholder));var opts=angular.isDefined(attrs.draggable)?scope.$eval(attrs.draggable):{};angular.isDefined(attrs.group)&&(scope.obj.group=attrs.group,opts.stack="."+attrs.group);var evts={start:function(evt,ui){scope.placeholder&&ui.helper.wrap('<div class="dragging"></div>'),scope.$apply(function(){scope.$emit("draggable.started",{obj:scope.obj})})},drag:function(evt){scope.$apply(function(){scope.$emit("draggable.dragging")})},stop:function(evt,ui){scope.placeholder&&ui.helper.unwrap(),scope.$apply(function(){scope.$emit("draggable.stopped")})}},options=angular.extend({},opts,evts);el.draggable(options)}}}]).run(["$templateCache",function($templateCache){$templateCache.put("/tmpls/draggable/default","<div ng-transclude></div>")}]),angular.module("resizeIt",[]).directive("resizeable",["$timeout",function($timeout){return{restrict:"A",link:function(scope,el,attrs,ctrlr){scope.obj={el:null,id:null,size:null},scope.obj.el=el,angular.isDefined(attrs.id)&&(scope.obj.id=attrs.id);var opts=angular.isDefined(attrs.resizeable)?scope.$eval(attrs.resizeable):{},evts={create:function(evt,ui){$timeout(function(){scope.$emit("resizeable.create",{obj:scope.obj})})},start:function(evt,ui){scope.$apply(function(){scope.$emit("resizeable.start",{obj:scope.obj})})},stop:function(evt,ui){scope.$apply(function(){scope.$emit("resizeable.stop",{ui:ui}),scope.obj.size=angular.copy(ui.size)})},resize:function(evt,ui){scope.$apply(function(){scope.$emit("resizeable.resizing")})}},options=angular.extend({},opts,evts);el.resizable(options),scope.$on("resizeable.set.width",function(evt,params){angular.isDefined(params.width)&&el.css("width",parseInt(params.width)+"px")}),scope.$on("resizeable.reset.width",function(evt){angular.isDefined(scope.obj.size)&&el.css("width",scope.obj.size.width+"px")})}}}]),angular.module("windows",["ngAnimate","itsADrag","resizeIt"]).directive("window",["$animate",function($animate){return{restrict:"E",transclude:!0,replace:!0,templateUrl:"modules/automata/client/partials/tape.html",scope:{id:"@id",title:"@title"},link:function(scope,el,attr){scope.minimized=!1,scope.minimize=function(){scope.minimized=!scope.minimized,angular.equals(scope.minimized,!0)?$animate.addClass(el,"minimize"):$animate.removeClass(el,"minimize")}}}}]).run(["$templateCache","$http",function($templateCache,$http){$http.get("modules/automata/client/partials/tape.html",{cache:$templateCache})}]),angular.module("automata").factory("Automata",["$resource",function($resource){return $resource("api/automata/:automatonId",{automatonId:"@_id"},{update:{method:"PUT"}})}]).factory("automatonGraph",["$q",function($q){var cy,automatonGraph=function(eles){var deferred=$q.defer();return $(function(){cy=cytoscape({container:$("#cy")[0],boxSelectionEnabled:!1,autounselectify:!0,layout:{name:"preset",avoidOverlap:!0},style:cytoscape.stylesheet().selector("node").css({content:"data(id)","text-valign":"center",color:"black","background-color":"white","border-style":"solid","border-width":"2px"}).selector(".accept").css({"border-style":"double","border-width":"6px"}).selector("edge").css({label:"data(label)","edge-text-rotation":"autorotate","curve-style":"bezier","control-point-step-size":"70px","target-arrow-shape":"triangle","line-color":"black","target-arrow-color":"black",color:"white","text-outline-width":2,"text-outline-color":"#555"}).selector(":selected").css({"background-color":"black","line-color":"black","target-arrow-color":"black","source-arrow-color":"black"}).selector(".autorotate").css({"edge-text-rotation":"autorotate"}).selector(".startparent").css({"border-width":"0","background-opacity":"0",content:""}).selector(".startmarker").css({"border-style":"solid","border-width":"2px",content:"",shape:"polygon","shape-polygon-points":"1 0 0.5 -0.4 0.5 0.4"}),elements:eles,ready:function(){deferred.resolve(this),cy.on("tap","node",function(e){var node=e.cyTarget;node.data().accept?(node.data().accept=!1,node.removeClass("accept"),node.data().start&&cy.$("#start").position({x:cy.$("#start").position("x")+2})):(node.data().accept=!0,node.addClass("accept"),node.data().start&&cy.$("#start").position({x:cy.$("#start").position("x")-2}))}),cy.on("tap",function(e){if(e.cyTarget===cy){var ind=cy.nodes().length-1;cy.add({group:"nodes",data:{id:ind,weight:75},classes:"enode",position:{x:e.cyPosition.x,y:e.cyPosition.y}})}}),cy.on("cxttap","node",function(e){var node=e.cyTarget;console.log("right tapped node "+node.id())}),cy.on("drag","#0",function(e){cy.$("#start").position({x:cy.$("#0").position("x")-(e.cyTarget.data().accept?34:32),y:cy.$("#0").position("y")})}),cy.$("#start").ungrabify(),cy.$("#start").unselectify(),cy.$("#start").position({x:cy.$("#0").position("x")-32,y:cy.$("#0").position("y")});var defaults={preview:!0,stackOrder:4,handleSize:10,handleColor:"#777777",handleLineType:"ghost",handleLineWidth:1,handleNodes:".enode",hoverDelay:150,cxt:!0,enabled:!0,toggleOffOnLeave:!1,edgeType:function(sourceNode,targetNode){return"flat"},loopAllowed:function(node){return!0},nodeLoopOffset:-50,nodeParams:function(sourceNode,targetNode){return{}},edgeParams:function(sourceNode,targetNode,i){return{}},start:function(sourceNode){},complete:function(sourceNode,targetNodes,addedEntities){angular.element("[ng-controller=AddEdgeModalController]").scope().open("sm",addedEntities)},stop:function(sourceNode){}};cy.edgehandles(defaults)}})}),deferred.promise};return automatonGraph}]),angular.module("core.admin").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"]})}]),angular.module("core.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/client/views/home.client.view.html"}).state("not-found",{url:"/not-found",templateUrl:"modules/core/client/views/404.client.view.html",data:{ignoreState:!0}}).state("bad-request",{url:"/bad-request",templateUrl:"modules/core/client/views/400.client.view.html",data:{ignoreState:!0}}).state("forbidden",{url:"/forbidden",templateUrl:"modules/core/client/views/403.client.view.html",data:{ignoreState:!0}})}]),angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus","$uibModal","$log",function($scope,$state,Authentication,Menus,$uibModal,$log){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1}),$scope.animationsEnabled=!0,$scope.example={text:"word",word:/^\s*\w*\s*$/},$scope.createNewAutomaton=function(){var modalInstance=$uibModal.open({animation:$scope.animationsEnabled,templateUrl:"createNewModal.html",controller:"CreateNewModalInstanceCtrl",size:"sm"});modalInstance.result.then(function(){console.log("result no selection 11")},function(){$log.info("Modal dismissed at: "+new Date)}),console.log("create new")}}]).controller("CreateNewModalInstanceCtrl",["$scope","$uibModalInstance",function($scope,$uibModalInstance){$scope.ok=function(){$uibModalInstance.close()},$scope.cancel=function(){$uibModalInstance.dismiss("cancel")}}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").directive("showErrors",["$timeout","$interpolate",function($timeout,$interpolate){var linkFn=function(scope,el,attrs,formCtrl){var inputEl,inputName,inputNgEl,options,showSuccess,toggleClasses,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=$interpolate(inputNgEl.attr("name")||"")(scope),!inputName)throw"show-errors element has no child input elements with a 'name' attribute class";var reset=function(){return $timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1)};scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},function(invalid){return toggleClasses(invalid)}),scope.$on("show-errors-check-validity",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?(initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)):void 0}),scope.$on("show-errors-reset",function(event,name){return angular.isUndefined(name)||formCtrl.$name===name?reset():void 0}),toggleClasses=function(invalid){return el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess?el.toggleClass("has-success",showValidationMessages&&!invalid):void 0}};return{restrict:"A",require:"^form",compile:function(elem,attrs){if(-1===attrs.showErrors.indexOf("skipFormGroupCheck")&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw"show-errors element does not have the 'form-group' or 'input-group' class";return linkFn}}}]),angular.module("core").factory("authInterceptor",["$q","$injector","Authentication",function($q,$injector,Authentication){return{responseError:function(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 401:Authentication.user=null,$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden")}return $q.reject(rejection)}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user","admin"],this.menus={};var shouldRender=function(user){if(~this.roles.indexOf("*"))return!0;if(!user)return!1;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],roles:null===options.roles||"undefined"==typeof options.roles?this.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.state,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===menuItemState&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemState){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{roles:["*"]})}]),angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){this.connect=function(){Authentication.user&&(this.socket=io())},this.connect(),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]),angular.module("users.admin").run(["Menus",function(Menus){Menus.addSubMenuItem("topbar","admin",{title:"Manage Users",state:"admin.users"})}]),angular.module("users.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin.users",{url:"/users",templateUrl:"modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController"}).state("admin.user",{url:"/users/:userId",templateUrl:"modules/users/client/views/admin/view-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}}).state("admin.user-edit",{url:"/users/:userId/edit",templateUrl:"modules/users/client/views/admin/edit-user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}})}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/client/views/settings/settings.client.view.html",data:{roles:["user","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/client/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/client/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/client/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/client/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/client/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/client/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin?err",templateUrl:"modules/users/client/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/client/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/client/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/client/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/client/views/password/reset-password.client.view.html"})}]),angular.module("users.admin").controller("UserListController",["$scope","$filter","Admin",function($scope,$filter,Admin){Admin.query(function(data){$scope.users=data,$scope.buildPager()}),$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=15,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")($scope.users,{$:$scope.search}),$scope.filterLength=$scope.filteredItems.length;var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.pagedItems=$scope.filteredItems.slice(begin,end)},$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()}}]),angular.module("users.admin").controller("UserController",["$scope","$state","Authentication","userResolve",function($scope,$state,Authentication,userResolve){$scope.authentication=Authentication,$scope.user=userResolve,$scope.remove=function(user){confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),$scope.users.splice($scope.users.indexOf(user),1)):$scope.user.$remove(function(){$state.go("admin.users")}))},$scope.update=function(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=$scope.user;user.$update(function(){$state.go("admin.user",{userId:user._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("users").controller("AuthenticationController",["$scope","$state","$http","$location","$window","Authentication","PasswordValidator",function($scope,$state,$http,$location,$window,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.error=$location.search().err,$scope.authentication.user&&$location.path("/"),$scope.signup=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.signin=function(isValid){return $scope.error=null,isValid?void $http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","userForm"),!1)},$scope.callOauthProvider=function(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),$window.location.href=url}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication","PasswordValidator",function($scope,$stateParams,$http,$location,Authentication,PasswordValidator){$scope.authentication=Authentication,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","forgotPasswordForm"),!1)},$scope.resetUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","resetPasswordForm"),!1)}}]),angular.module("users").controller("ChangePasswordController",["$scope","$http","Authentication","PasswordValidator",function($scope,$http,Authentication,PasswordValidator){$scope.user=Authentication.user,$scope.popoverMsg=PasswordValidator.getPopoverMsg(),$scope.changeUserPassword=function(isValid){return $scope.success=$scope.error=null,isValid?void $http.post("/api/users/password",$scope.passwordDetails).success(function(response){$scope.$broadcast("show-errors-reset","passwordForm"),$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message}):($scope.$broadcast("show-errors-check-validity","passwordForm"),!1)}}]),angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture",alias:"newProfilePicture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]),angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if($scope.success=$scope.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","userForm"),!1;var user=new Users($scope.user);user.$update(function(response){$scope.$broadcast("show-errors-reset","userForm"),$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}}]),angular.module("users").controller("SocialAccountsController",["$scope","$http","Authentication",function($scope,$http,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","Authentication",function($scope,Authentication){$scope.user=Authentication.user}]),angular.module("users").directive("passwordValidator",["PasswordValidator",function(PasswordValidator){return{require:"ngModel",link:function(scope,element,attrs,ngModel){
ngModel.$validators.requirements=function(password){var status=!0;if(password){var result=PasswordValidator.getResult(password),requirementsIdx=0,requirementsMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];result.errors.length<requirementsMeter.length&&(requirementsIdx=requirementsMeter.length-result.errors.length-1),scope.requirementsColor=requirementsMeter[requirementsIdx].color,scope.requirementsProgress=requirementsMeter[requirementsIdx].progress,result.errors.length?(scope.popoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,status=!1):(scope.popoverMsg="",scope.passwordErrors=[],status=!0)}return status}}}}]),angular.module("users").directive("passwordVerify",[function(){return{require:"ngModel",scope:{passwordVerify:"="},link:function(scope,element,attrs,ngModel){scope.$watch(function(){var combined;return(scope.passwordVerify||ngModel)&&(combined=scope.passwordVerify+"_"+ngModel),combined},function(value){value&&(ngModel.$validators.passwordVerify=function(password){var origin=scope.passwordVerify;return origin!==password?!1:!0})})}}}]),angular.module("users").directive("lowercase",function(){return{require:"ngModel",link:function(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}}}),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("PasswordValidator",["$window",function($window){var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest;return{getResult:function(password){var result=owaspPasswordStrengthTest.test(password);return result},getPopoverMsg:function(){var popoverMsg="Please enter a passphrase or password with greater than 10 characters, numbers, lowercase, upppercase, and special characters.";return popoverMsg}}}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]),angular.module("users.admin").factory("Admin",["$resource",function($resource){return $resource("api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]);
!function(window){"use strict";function registerModule(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)}var applicationModuleName="mean",service={applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:["ngResource","ngAnimate","ngMessages","ui.router","ui.bootstrap","angularFileUpload"],registerModule:registerModule};window.ApplicationConfiguration=service}(window),function(app){"use strict";function bootstrapConfig($locationProvider,$httpProvider){$locationProvider.html5Mode(!0).hashPrefix("!"),$httpProvider.interceptors.push("authInterceptor")}function init(){if(window.location.hash&&"#_=_"===window.location.hash)if(window.history&&history.pushState)window.history.pushState("",document.title,window.location.pathname);else{var scroll={top:document.body.scrollTop,left:document.body.scrollLeft};window.location.hash="",document.body.scrollTop=scroll.top,document.body.scrollLeft=scroll.left}angular.bootstrap(document,[app.applicationModuleName])}angular.module(app.applicationModuleName,app.applicationModuleVendorDependencies),angular.module(app.applicationModuleName).config(bootstrapConfig),bootstrapConfig.$inject=["$locationProvider","$httpProvider"],angular.element(document).ready(init)}(ApplicationConfiguration),function(app){"use strict";app.registerModule("automata",["core","windows","ui.bootstrap"]),app.registerModule("automata.services"),app.registerModule("automata.routes",["ui.router","core.routes","automata.services"])}(ApplicationConfiguration),function(app){"use strict";app.registerModule("itsADrag"),app.registerModule("resizeIt"),app.registerModule("windows",["itsADrag","resizeIt"])}(ApplicationConfiguration),function(app){"use strict";app.registerModule("core"),app.registerModule("core.routes",["ui.router"]),app.registerModule("core.admin",["core"]),app.registerModule("core.admin.routes",["ui.router"])}(ApplicationConfiguration),function(app){"use strict";app.registerModule("users"),app.registerModule("users.admin"),app.registerModule("users.admin.routes",["ui.router","core.routes","users.admin.services"]),app.registerModule("users.admin.services"),app.registerModule("users.routes",["ui.router","core.routes"]),app.registerModule("users.services")}(ApplicationConfiguration),function(){"use strict";function menuConfig(menuService){menuService.addMenuItem("topbar",{title:"Automata",state:"automata",type:"dropdown",roles:["*"]}),menuService.addSubMenuItem("topbar","automata",{title:"List Automata",state:"automata.list"}),menuService.addSubMenuItem("topbar","automata",{title:"Create New Turing Machine",state:"automata.create-tm",roles:["*"]}),menuService.addSubMenuItem("topbar","automata",{title:"Create New Finite State Automaton",state:"automata.create-fsa",roles:["*"]}),menuService.addSubMenuItem("topbar","automata",{title:"Create New Pushdown Automaton",state:"automata.create-pda",roles:["*"]})}angular.module("automata").run(menuConfig),menuConfig.$inject=["menuService"]}(),function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("automata",{"abstract":!0,url:"/automata",template:"<ui-view/>"}).state("automata.list",{url:"",templateUrl:"modules/automata/client/views/list-automata.client.view.html",controller:"AutomataListController",controllerAs:"vm",data:{pageTitle:"Automata List"}}).state("automata.create-tm",{url:"/create-tm",templateUrl:"modules/automata/client/views/view-automaton.client.view.html",controller:"AutomataController",controllerAs:"vm",resolve:{automatonResolve:newAutomaton},data:{type:"tm",pageTitle:"Create TM"}}).state("automata.create-fsa",{url:"/create-fsa",templateUrl:"modules/automata/client/views/view-automaton.client.view.html",controller:"AutomataController",controllerAs:"vm",resolve:{automatonResolve:newAutomaton},data:{type:"fsa",pageTitle:"Create FSA"}}).state("automata.create-pda",{url:"/create-pda",templateUrl:"modules/automata/client/views/view-automaton.client.view.html",controller:"AutomataController",controllerAs:"vm",resolve:{automatonResolve:newAutomaton},data:{type:"pda",pageTitle:"Create PDA"}}).state("automata.view",{url:"/:automatonId",templateUrl:"modules/automata/client/views/view-automaton.client.view.html",controller:"AutomataController",controllerAs:"vm",resolve:{automatonResolve:getAutomaton},data:{pageTitle:"View Automaton"}})}function getAutomaton($stateParams,AutomataService){return AutomataService.get({automatonId:$stateParams.automatonId}).$promise}function newAutomaton($state,AutomataService){for(var empty_tape=[],i=0;50>i;i++)empty_tape.push(" ");return new AutomataService({alphabet:["0","1","A","B","C","_"],eles:{nodes:[{data:{id:"start"},classes:"startmarker"},{data:{id:"0",label:0,start:!0},classes:"enode",position:{x:0,y:0}}],edges:[]},tape:{position:0,contents:empty_tape},determ:!0})}angular.module("automata.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"],getAutomaton.$inject=["$stateParams","AutomataService"],newAutomaton.$inject=["$state","AutomataService"]}(),angular.module("automata").controller("AddEdgeModalController",["$scope","$uibModal","$log",function($scope,$uibModal,$log){$scope.open=function(size,addedEntities){var modalInstance=$uibModal.open({animation:!0,templateUrl:"addEdgeModalContent.html",controller:"AddEdgeModalInstanceCtrl",backdrop:"static",size:size,resolve:{machine:function(){return $scope.$parent.vm.automaton.machine},alphabet:function(){return $scope.$parent.vm.automaton.alphabet},addedEntities:function(){return addedEntities},determ:function(){return $scope.$parent.vm.automaton.determ}}});modalInstance.result.then(function(){},function(){$log.info("Modal dismissed at: "+new Date)})}}]),angular.module("automata").controller("AddEdgeModalInstanceCtrl",["$scope","$uibModalInstance","machine","determ","addedEntities","alphabet",function($scope,$uibModalInstance,machine,determ,addedEntities,alphabet){if($scope.alphabet=alphabet,$scope.read_alph=$scope.alphabet.slice(),$scope.machine=machine,$scope.addedEntities=addedEntities,$scope.act_alph=alphabet.concat(["<",">"]),determ){var fromNode=$scope.addedEntities.source();fromNode.outgoers().forEach(function(el){if(el.isEdge()&&el.data().read)for(var i=0;i<$scope.read_alph.length;i++)el.data().read===$scope.read_alph[i]&&$scope.read_alph.splice(i,1)})}$scope.ok=function(){var read=$scope.labels.read.toUpperCase();if(addedEntities.data("read",read),"tm"===machine){var act=$scope.labels.act.toUpperCase();addedEntities.data("action",act),addedEntities.data("label",read+":"+act)}else addedEntities.data("label",read);$uibModalInstance.close()},$scope.cancel=function(){$uibModalInstance.dismiss("cancel"),$scope.addedEntities.remove()}}]),function(){"use strict";function AutomataController($scope,$state,$window,$timeout,$location,$stateParams,Authentication,automaton,automatonGraph,tape){function save(isValid){function successCallback(res){vm.automaton._id=res._id}function errorCallback(res){vm.error=res.data.message}return isValid?(vm.automaton.eles.nodes=cy.nodes().jsons(),vm.automaton.eles.edges=cy.edges().jsons(),void(vm.automaton._id?vm.automaton.$update(successCallback,errorCallback):vm.automaton.$save(successCallback,errorCallback))):($scope.$broadcast("show-errors-check-validity","vm.form.automataForm"),!1)}var vm=this;vm.automaton=automaton,vm.authentication=Authentication,vm.error=null,vm.save=save,vm.automaton.machine=vm.automaton.machine||$state.current.data.type,vm.automaton.title=vm.automaton.title||function(){return"fsa"===$state.current.data.type?"Untitled Finite-State Automaton":"pda"===$state.current.data.type?"Untitled Pushdown Automaton":"Untitled Turing Machine"}();var cy,PAUSE=1;vm.play=function(){"fsa"===vm.automaton.machine?vm.playFSM(cy,vm.automaton):"tm"===vm.automaton.machine&&vm.playTM(cy,vm.automaton)},vm.labels={read:"",act:""},vm.focusNext=tape.focusNext;var stopPlay=!0;vm.resetElementColors=function(){cy.$("node").removeClass("running"),cy.$("edge").removeClass("running"),cy.$("node").removeClass("active"),cy.$("edge").removeClass("active"),cy.$("node").removeClass("rejected"),cy.$("node").removeClass("accepting"),angular.element(document.querySelector(".tape-content")).removeClass("accepted"),angular.element(document.querySelector(".tape-content")).removeClass("rejected")},vm.setTapePosition=function(pos){stopPlay=!0,vm.automaton.tape.position=pos,vm.resetElementColors()},vm.reset=function(cy,automaton){stopPlay=!0,vm.automaton.tape.position=0,vm.resetElementColors()},vm.doNextStepFSM=function(node,pos,cy,prevEdge,pause,t){stopPlay||(vm.automaton.tape.contents[pos]&&" "!==vm.automaton.tape.contents[pos]&&vm.automaton.tape.contents[pos].length>0?setTimeout(function(){var noOutgoing=!0;node.outgoers().forEach(function(edge){if(edge.data().read===vm.automaton.tape.contents[pos]){noOutgoing=!1,edge.addClass("active");var nextNode=edge.target();node.removeClass("active"),nextNode.addClass("active"),prevEdge&&prevEdge!==edge&&prevEdge.removeClass("active"),stopPlay?vm.resetElementColors():($scope.$apply(t.movePosition(1,vm.automaton)),vm.doNextStepFSM(nextNode,pos+1,cy,edge,pause,t))}}),noOutgoing&&(stopPlay=!0,prevEdge&&prevEdge.removeClass("active"),cy.$("node").removeClass("running"),cy.$("edge").removeClass("running"),angular.element(document.querySelector(".tape-content")).addClass("rejected"),node.removeClass("active"),node.addClass("rejected"))},pause):prevEdge&&setTimeout(function(){stopPlay=!0,prevEdge.removeClass("active"),cy.$("node").removeClass("running"),cy.$("edge").removeClass("running"),node.hasClass("accept")?(angular.element(document.querySelector(".tape-content")).addClass("accepted"),node.removeClass("active"),node.addClass("accepting")):(angular.element(document.querySelector(".tape-content")).addClass("rejected"),node.removeClass("active"),node.addClass("rejected"))},pause))},vm.playFSM=function(cy,automaton){if(stopPlay){vm.reset(cy,automaton),stopPlay=!1,cy.$("node").addClass("running"),cy.$("edge").addClass("running");var startNode=cy.getElementById("0");startNode.addClass("active");var pause=PAUSE;vm.doNextStepFSM(startNode,0,cy,null,pause,tape)}},vm.doNextStepTM=function(node,pos,cy,prevEdge,pause,t){stopPlay||$timeout(function(){var noOutgoing=!0,action=null,read=null;node.outgoers().forEach(function(edge){if(read="_"===edge.data().read?" ":edge.data().read,read===vm.automaton.tape.contents[pos]||read===vm.automaton.tape.contents[pos]+" "){action=edge.data().action,noOutgoing=!1,edge.addClass("active");var nextNode=edge.target();return node.removeClass("active"),nextNode.addClass("active"),prevEdge&&prevEdge!==edge&&prevEdge.removeClass("active"),stopPlay?(console.log("resetting colors"),vm.resetElementColors()):(">"===action?$scope.$apply(t.movePosition(1,vm.automaton)):"<"===action?$scope.$apply(t.movePosition(-1,vm.automaton)):"_"===action?$scope.$apply(t.setContent(vm.automaton.tape.position,vm.automaton," ")):action&&$scope.$apply(t.setContent(vm.automaton.tape.position,vm.automaton,edge.data().action)),action=null,read=null,vm.doNextStepTM(nextNode,vm.automaton.tape.position,cy,edge,pause,t)),!1}}),noOutgoing&&(stopPlay=!0,prevEdge&&prevEdge.removeClass("active"),cy.$("node").removeClass("running"),cy.$("edge").removeClass("running"))},pause)},vm.playTM=function(cy,automaton){if(console.log("playing turing machine"),stopPlay){vm.reset(cy,automaton),stopPlay=!1,cy.$("node").addClass("running"),cy.$("edge").addClass("running");var startNode=cy.getElementById("0");startNode.addClass("active");var pause=PAUSE;vm.doNextStepTM(startNode,0,cy,null,pause,tape)}},function(){automatonGraph(vm.automaton.eles,vm.automaton.machine).then(function(automatonCy){cy=automatonCy,vm.cyLoaded=!0})}()}angular.module("automata").controller("AutomataController",AutomataController),AutomataController.$inject=["$scope","$state","$window","$timeout","$location","$stateParams","Authentication","automatonResolve","automatonGraph","tape"]}(),function(){"use strict";function AutomataListController(AutomataService){var vm=this;vm.automata=AutomataService.query()}angular.module("automata").controller("AutomataListController",AutomataListController),AutomataListController.$inject=["AutomataService"]}(),angular.module("itsADrag",[]).directive("draggable",[function(){return{restrict:"AE",link:function(scope,el,attrs){scope.minimized=!1,scope.obj={id:null,content:"",group:null},scope.placeholder=!1,scope.obj.content=el.html(),angular.isDefined(attrs.id)&&(scope.obj.id=attrs.id),angular.isDefined(attrs.placeholder)&&(scope.placeholder=scope.$eval(attrs.placeholder));var opts=angular.isDefined(attrs.draggable)?scope.$eval(attrs.draggable):{};angular.isDefined(attrs.group)&&(scope.obj.group=attrs.group,opts.stack="."+attrs.group);var evts={start:function(evt,ui){scope.placeholder&&ui.helper.wrap('<div class="dragging"></div>'),scope.$apply(function(){scope.$emit("draggable.started",{obj:scope.obj})})},drag:function(evt){scope.$apply(function(){scope.$emit("draggable.dragging")})},stop:function(evt,ui){scope.placeholder&&ui.helper.unwrap(),scope.$apply(function(){scope.$emit("draggable.stopped")})}},options=angular.extend({},opts,evts);el.draggable(options)}}}]).run(["$templateCache",function($templateCache){$templateCache.put("/tmpls/draggable/default","<div ng-transclude></div>")}]),angular.module("resizeIt",[]).directive("resizeable",["$timeout",function($timeout){return{restrict:"A",link:function(scope,el,attrs,ctrlr){scope.obj={el:null,id:null,size:null},scope.obj.el=el,angular.isDefined(attrs.id)&&(scope.obj.id=attrs.id);var opts=angular.isDefined(attrs.resizeable)?scope.$eval(attrs.resizeable):{},evts={create:function(evt,ui){$timeout(function(){scope.$emit("resizeable.create",{obj:scope.obj})})},start:function(evt,ui){scope.$apply(function(){scope.$emit("resizeable.start",{obj:scope.obj})})},stop:function(evt,ui){scope.$apply(function(){scope.$emit("resizeable.stop",{ui:ui}),scope.obj.size=angular.copy(ui.size)})},resize:function(evt,ui){scope.$apply(function(){scope.$emit("resizeable.resizing")})}},options=angular.extend({},opts,evts);el.resizable(options),scope.$on("resizeable.set.width",function(evt,params){angular.isDefined(params.width)&&el.css("width",parseInt(params.width,10)+"px")}),scope.$on("resizeable.reset.width",function(evt){angular.isDefined(scope.obj.size)&&el.css("width",scope.obj.size.width+"px")})}}}]),angular.module("windows",["ngAnimate","itsADrag","resizeIt"]).directive("window",["$animate",function($animate){return{restrict:"E",transclude:!0,replace:!0,templateUrl:"modules/automata/client/partials/tape.html",scope:{id:"@id",title:"@title"},link:function(scope,el,attr){scope.minimized=!1,scope.minimize=function(){scope.minimized=!scope.minimized,angular.equals(scope.minimized,!0)?$animate.addClass(el,"minimize"):$animate.removeClass(el,"minimize")}}}}]).run(["$templateCache","$http",function($templateCache,$http){$http.get("modules/automata/client/partials/tape.html",{cache:$templateCache})}]),function(){"use strict";function AutomataService($resource){return $resource("api/automata/:automatonId",{automatonId:"@_id"},{update:{method:"PUT"}})}angular.module("automata.services").factory("AutomataService",AutomataService),AutomataService.$inject=["$resource"]}(),function(){"use strict";function automatonGraph($q){function resetElementColors(){cy.$("node").removeClass("running"),cy.$("edge").removeClass("running"),cy.$("node").removeClass("active"),cy.$("edge").removeClass("active"),cy.$("node").removeClass("rejected"),cy.$("node").removeClass("accepting"),angular.element(document.querySelector(".tape-content")).removeClass("accepted"),angular.element(document.querySelector(".tape-content")).removeClass("rejected")}var cy,automatonGraph=function(eles,machine){var deferred=$q.defer();return $(function(){cy=cytoscape({container:$("#cy")[0],boxSelectionEnabled:!0,autounselectify:!0,layout:{name:"preset",avoidOverlap:!0},style:cytoscape.stylesheet().selector("node").css({content:"data(label)","text-valign":"center",color:"black","background-color":"white","border-style":"solid","border-width":"2px"}).selector(".accept").css({"border-style":"double","border-width":"6px"}).selector(".toDelete").css({"overlay-color":"red"}).selector("edge").css({label:"data(label)","edge-text-rotation":"none","curve-style":"bezier","control-point-step-size":"70px","target-arrow-shape":"triangle","line-color":"black","target-arrow-color":"black",color:"white","text-outline-width":2,"text-outline-color":"#555"}).selector(":selected").css({"background-color":"black","line-color":"black","target-arrow-color":"black","source-arrow-color":"black"}).selector(".autorotate").css({"edge-text-rotation":"autorotate"}).selector(".startparent").css({"border-width":"0","background-opacity":"0",content:""}).selector(".startmarker").css({"border-style":"solid","border-width":"2px",content:"",shape:"polygon","shape-polygon-points":"1 0 0.5 -0.4 0.5 0.4"}).selector("node.running").css({color:"Gray","background-color":"lightGray","border-color":"Gray"}).selector("node.running.active").css({color:"black","background-color":"white","border-color":"black"}).selector("node.rejected").css({"border-color":"red"}).selector("node.accepting").css({"border-color":"LimeGreen"}).selector("edge.running").css({"line-color":"Gray","target-arrow-color":"Gray"}).selector("edge.running.active").css({"line-color":"Black","target-arrow-color":"Black"}).selector("edge.accepting.active").css({"line-color":"LimeGreen","target-arrow-color":"LimeGreen"}),elements:eles,ready:function(){function doMouseUp(e){var element=e.cyTarget;if(clickstop=e.timeStamp-clickstart,clickstop>=750){resetElementColors(),cy.remove(".toDelete");var deleted=element.data("label");del&&element.isNode()&&cy.nodes().forEach(function(n){if(n.data("label")&&n.data("label")>deleted){var newLabel=n.data("label")-1;n.data("label",newLabel)}})}element.removeClass("toDelete"),clickstart=0,del=!1}function doTapHold(e){var element=e.cyTarget;"start"!==element.id()&&"0"!==element.id()&&(element.addClass("toDelete"),del=!0)}deferred.resolve(this);var clickstart,clickstop=0,del=!1;this.on("vmousedown",function(e){clickstart=e.timeStamp}),this.on("vmouseup","node",function(e){doMouseUp(e)}),this.on("vmouseup","edge",function(e){doMouseUp(e)}),this.on("taphold","node",function(e){doTapHold(e)}),this.on("taphold","edge",function(e){doTapHold(e)});var tappedBefore,tappedTimeout;this.on("tap","node",function(e){var node=e.cyTarget;tappedTimeout&&tappedBefore&&clearTimeout(tappedTimeout),tappedBefore===node?(node.trigger("doubleTap"),tappedBefore=null):(tappedTimeout=setTimeout(function(){tappedBefore=null},300),tappedBefore=node)}),"tm"!==machine&&(this.on("click","node",function(e){var node=e.cyTarget;node.data().accept?(node.data().accept=!1,node.removeClass("accept"),resetElementColors(),node.data().start&&cy.$("#start").position({x:cy.$("#start").position("x")+2})):(node.data().accept=!0,node.addClass("accept"),resetElementColors(),node.data().start&&cy.$("#start").position({x:cy.$("#start").position("x")-2}))}),this.on("doubleTap",function(e){var node=e.cyTarget;node.data().accept?(node.data().accept=!1,node.removeClass("accept"),resetElementColors(),node.data().start&&cy.$("#start").position({x:cy.$("#start").position("x")+2})):(node.data().accept=!0,node.addClass("accept"),resetElementColors(),node.data().start&&cy.$("#start").position({x:cy.$("#start").position("x")-2}))})),this.on("tap",function(e){if(resetElementColors(),e.cyTarget===cy){var ind=cy.nodes().length-1;cy.add({group:"nodes",data:{label:ind,weight:75},classes:"enode",position:{x:e.cyPosition.x,y:e.cyPosition.y}})}}),this.on("cxttap","node",function(e){var node=e.cyTarget;node.removeClass("toDelete"),del=!1}),this.on("drag","#0",function(e){cy.$("#start").position({x:cy.$("#0").position("x")-(e.cyTarget.data().accept?34:32),y:cy.$("#0").position("y")})}),this.$("#start").ungrabify(),this.$("#start").unselectify(),this.$("#start").position({x:this.$("#0").position("x")-32,y:this.$("#0").position("y")}),this.on("mouseout","node",function(){cy.panBy({x:0,y:0})});var defaults={preview:!0,stackOrder:4,handleSize:15,handleColor:"#A7A6A0",handleLineType:"ghost",handleLineWidth:1,handleNodes:".enode",hoverDelay:150,cxt:!0,enabled:!0,toggleOffOnLeave:!0,edgeType:function(sourceNode,targetNode){return"flat"},loopAllowed:function(node){return!0},nodeLoopOffset:-50,nodeParams:function(sourceNode,targetNode){return{}},edgeParams:function(sourceNode,targetNode,i){return{}},start:function(sourceNode){},complete:function(sourceNode,targetNodes,addedEntities){resetElementColors(),angular.element("[ng-controller=AddEdgeModalController]").scope().open("sm",addedEntities)},stop:function(sourceNode){}};this.edgehandles(defaults)}})}),deferred.promise};return automatonGraph}angular.module("automata.services").factory("automatonGraph",automatonGraph),automatonGraph.$inject=["$q"]}(),function(){"use strict";function tape($timeout){var tape={focusNext:function(event,index,automaton){var nextInd;8===event.keyCode?(automaton.tape.contents[index]="",nextInd=index>0?index-1:index):37===event.keyCode?index>0?nextInd=index-1:(automaton.tape.contents.unshift(" "),nextInd=0,angular.element(document.querySelector(".cell-"+nextInd))[0].blur()):(automaton.tape.contents[index]=String.fromCharCode(event.keyCode),nextInd=index+1,automaton.tape.contents.length===nextInd&&automaton.tape.contents.push(" ")),$timeout(function(){angular.element(document.querySelector(".cell-"+nextInd))[0].focus()},0)},movePosition:function(move,automaton){automaton.tape.position=automaton.tape.position+move,automaton.tape.position<0&&(automaton.tape.contents.unshift(" "),automaton.tape.position=0)},setContent:function(position,automaton,value){automaton.tape.contents[position]=value}};return tape}angular.module("automata.services").factory("tape",tape),tape.$inject=["$timeout"]}(),function(){"use strict";function menuConfig(menuService){menuService.addMenuItem("topbar",{title:"Admin",state:"admin",type:"dropdown",roles:["admin"]})}angular.module("core.admin").run(menuConfig),menuConfig.$inject=["menuService"]}(),function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}angular.module("core.admin.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"]}(),function(){"use strict";function menuConfig(menuService){menuService.addMenu("account",{roles:["user"]}),menuService.addMenuItem("account",{title:"",state:"settings",type:"dropdown",roles:["user"]}),menuService.addSubMenuItem("account","settings",{title:"Edit Profile",state:"settings.profile"}),menuService.addSubMenuItem("account","settings",{title:"Edit Profile Picture",state:"settings.picture"}),menuService.addSubMenuItem("account","settings",{title:"Change Password",state:"settings.password"}),menuService.addSubMenuItem("account","settings",{title:"Manage Social Accounts",state:"settings.accounts"})}angular.module("core").run(menuConfig),menuConfig.$inject=["menuService"]}(),function(){"use strict";function routeFilter($rootScope,$state,Authentication){function stateChangeStart(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){for(var allowed=!1,i=0,roles=toState.data.roles;i<roles.length;i++)if("guest"===roles[i]||Authentication.user&&void 0!==Authentication.user.roles&&-1!==Authentication.user.roles.indexOf(roles[i])){allowed=!0;break}allowed||(event.preventDefault(),void 0!==Authentication.user&&"object"==typeof Authentication.user?$state.transitionTo("forbidden"):$state.go("authentication.signin").then(function(){storePreviousState(toState,toParams)}))}}function stateChangeSuccess(event,toState,toParams,fromState,fromParams){storePreviousState(fromState,fromParams)}function storePreviousState(state,params){state.data&&state.data.ignoreState||($state.previous={state:state,params:params,href:$state.href(state,params)})}$rootScope.$on("$stateChangeStart",stateChangeStart),$rootScope.$on("$stateChangeSuccess",stateChangeSuccess)}angular.module("core").run(routeFilter),routeFilter.$inject=["$rootScope","$state","Authentication"]}(),function(){"use strict";function routeConfig($stateProvider,$urlRouterProvider){$urlRouterProvider.rule(function($injector,$location){var path=$location.path(),hasTrailingSlash=path.length>1&&"/"===path[path.length-1];if(hasTrailingSlash){var newPath=path.substr(0,path.length-1);$location.replace().path(newPath)}}),$urlRouterProvider.otherwise(function($injector,$location){$injector.get("$state").transitionTo("not-found",null,{location:!1})}),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/client/views/home.client.view.html",controller:"HomeController",controllerAs:"vm"}).state("not-found",{url:"/not-found",templateUrl:"modules/core/client/views/404.client.view.html",data:{ignoreState:!0,pageTitle:"Not-Found"}}).state("bad-request",{url:"/bad-request",templateUrl:"modules/core/client/views/400.client.view.html",data:{ignoreState:!0,pageTitle:"Bad-Request"}}).state("forbidden",{url:"/forbidden",templateUrl:"modules/core/client/views/403.client.view.html",data:{ignoreState:!0,pageTitle:"Forbidden"}})}angular.module("core.routes").config(routeConfig),routeConfig.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function HeaderController($scope,$state,Authentication,menuService){function stateChangeSuccess(){vm.isCollapsed=!1}var vm=this;vm.accountMenu=menuService.getMenu("account").items[0],vm.authentication=Authentication,vm.isCollapsed=!1,vm.menu=menuService.getMenu("topbar"),$scope.$on("$stateChangeSuccess",stateChangeSuccess)}angular.module("core").controller("HeaderController",HeaderController),HeaderController.$inject=["$scope","$state","Authentication","menuService"]}(),function(){"use strict";function HomeController(){}angular.module("core").controller("HomeController",HomeController)}(),function(){"use strict";function pageTitle($rootScope,$timeout,$interpolate,$state){function link(scope,element){function listener(event,toState){var title=getTitle($state.$current);$timeout(function(){element.text(title)},0,!1)}function getTitle(currentState){var applicationCoreTitle="Automata",workingState=currentState;if(currentState.data){workingState="undefined"!=typeof workingState.locals?workingState.locals.globals:workingState;var stateTitle=$interpolate(currentState.data.pageTitle)(workingState);return applicationCoreTitle+" - "+stateTitle}return applicationCoreTitle}$rootScope.$on("$stateChangeSuccess",listener)}var directive={restrict:"A",link:link};return directive}angular.module("core").directive("pageTitle",pageTitle),pageTitle.$inject=["$rootScope","$timeout","$interpolate","$state"]}(),function(){"use strict";function showErrors($timeout,$interpolate){function compile(elem,attrs){function linkFn(scope,el,attrs,formCtrl){function checkValidity(event,name){return angular.isUndefined(name)||formCtrl.$name===name?(initCheck=!0,showValidationMessages=!0,toggleClasses(formCtrl[inputName].$invalid)):void 0}function reset(event,name){return angular.isUndefined(name)||formCtrl.$name===name?$timeout(function(){el.removeClass("has-error"),el.removeClass("has-success"),showValidationMessages=!1},0,!1):void 0}function toggleClasses(invalid){return el.toggleClass("has-error",showValidationMessages&&invalid),showSuccess?el.toggleClass("has-success",showValidationMessages&&!invalid):void 0}var inputEl,inputName,inputNgEl,options,showSuccess,initCheck=!1,showValidationMessages=!1;if(options=scope.$eval(attrs.showErrors)||{},showSuccess=options.showSuccess||!1,inputEl=el[0].querySelector(".form-control[name]")||el[0].querySelector("[name]"),inputNgEl=angular.element(inputEl),inputName=$interpolate(inputNgEl.attr("name")||"")(scope),!inputName)throw new Error("show-errors element has no child input elements with a 'name' attribute class");scope.$watch(function(){return formCtrl[inputName]&&formCtrl[inputName].$invalid},toggleClasses),scope.$on("show-errors-check-validity",checkValidity),scope.$on("show-errors-reset",reset)}if(-1===attrs.showErrors.indexOf("skipFormGroupCheck")&&!elem.hasClass("form-group")&&!elem.hasClass("input-group"))throw new Error("show-errors element does not have the 'form-group' or 'input-group' class");return linkFn}var directive={restrict:"A",require:"^form",compile:compile};return directive}angular.module("core").directive("showErrors",showErrors),showErrors.$inject=["$timeout","$interpolate"]}(),function(){"use strict";function authInterceptor($q,$injector,Authentication){function responseError(rejection){if(!rejection.config.ignoreAuthModule)switch(rejection.status){case 401:Authentication.user=null,$injector.get("$state").transitionTo("authentication.signin");break;case 403:$injector.get("$state").transitionTo("forbidden")}return $q.reject(rejection)}var service={responseError:responseError};return service}angular.module("core").factory("authInterceptor",authInterceptor),authInterceptor.$inject=["$q","$injector","Authentication"]}(),function(){"use strict";function menuService(){function addMenu(menuId,options){return options=options||{},service.menus[menuId]={roles:options.roles||service.defaultRoles,items:options.items||[],shouldRender:shouldRender},service.menus[menuId]}function addMenuItem(menuId,options){if(options=options||{},service.validateMenuExistance(menuId),service.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],roles:null===options.roles||"undefined"==typeof options.roles?service.defaultRoles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)options.items.hasOwnProperty(i)&&service.addSubMenuItem(menuId,options.state,options.items[i]);return service.menus[menuId]}function addSubMenuItem(menuId,parentItemState,options){options=options||{},service.validateMenuExistance(menuId);for(var itemIndex in service.menus[menuId].items)service.menus[menuId].items[itemIndex].state===parentItemState&&service.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",roles:null===options.roles||"undefined"==typeof options.roles?service.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return service.menus[menuId]}function getMenu(menuId){return service.validateMenuExistance(menuId),service.menus[menuId]}function init(){shouldRender=function(user){if(-1!==this.roles.indexOf("*"))return!0;if(!user)return!1;for(var userRoleIndex in user.roles)if(user.roles.hasOwnProperty(userRoleIndex))for(var roleIndex in this.roles)if(this.roles.hasOwnProperty(roleIndex)&&this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1},addMenu("topbar",{roles:["*"]})}function removeMenu(menuId){service.validateMenuExistance(menuId),delete service.menus[menuId]}function removeMenuItem(menuId,menuItemState){service.validateMenuExistance(menuId);for(var itemIndex in service.menus[menuId].items)service.menus[menuId].items.hasOwnProperty(itemIndex)&&service.menus[menuId].items[itemIndex].state===menuItemState&&service.menus[menuId].items.splice(itemIndex,1);return service.menus[menuId]}function removeSubMenuItem(menuId,submenuItemState){service.validateMenuExistance(menuId);for(var itemIndex in service.menus[menuId].items)if(this.menus[menuId].items.hasOwnProperty(itemIndex))for(var subitemIndex in service.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items.hasOwnProperty(subitemIndex)&&service.menus[menuId].items[itemIndex].items[subitemIndex].state===submenuItemState&&service.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return service.menus[menuId]}function validateMenuExistance(menuId){if(menuId&&menuId.length){if(service.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided");
}var shouldRender,service={addMenu:addMenu,addMenuItem:addMenuItem,addSubMenuItem:addSubMenuItem,defaultRoles:["user","admin"],getMenu:getMenu,menus:{},removeMenu:removeMenu,removeMenuItem:removeMenuItem,removeSubMenuItem:removeSubMenuItem,validateMenuExistance:validateMenuExistance};return init(),service}angular.module("core").factory("menuService",menuService)}(),function(){"use strict";function Socket(Authentication,$state,$timeout){function connect(){Authentication.user&&(service.socket=io())}function emit(eventName,data){service.socket&&service.socket.emit(eventName,data)}function on(eventName,callback){service.socket&&service.socket.on(eventName,function(data){$timeout(function(){callback(data)})})}function removeListener(eventName){service.socket&&service.socket.removeListener(eventName)}var service={connect:connect,emit:emit,on:on,removeListener:removeListener,socket:null};return connect(),service}angular.module("core").factory("Socket",Socket),Socket.$inject=["Authentication","$state","$timeout"]}(),function(){"use strict";function menuConfig(menuService){menuService.addSubMenuItem("topbar","admin",{title:"Manage Users",state:"admin.users"})}angular.module("users.admin").run(menuConfig),menuConfig.$inject=["menuService"]}(),function(){"use strict";function routeConfig($stateProvider){function getUser($stateParams,AdminService){return AdminService.get({userId:$stateParams.userId}).$promise}$stateProvider.state("admin.users",{url:"/users",templateUrl:"modules/users/client/views/admin/list-users.client.view.html",controller:"UserListController",controllerAs:"vm",data:{pageTitle:"Users List"}}).state("admin.user",{url:"/users/:userId",templateUrl:"modules/users/client/views/admin/view-user.client.view.html",controller:"UserController",controllerAs:"vm",resolve:{userResolve:getUser},data:{pageTitle:"Edit {{ userResolve.displayName }}"}}).state("admin.user-edit",{url:"/users/:userId/edit",templateUrl:"modules/users/client/views/admin/edit-user.client.view.html",controller:"UserController",controllerAs:"vm",resolve:{userResolve:getUser},data:{pageTitle:"Edit User {{ userResolve.displayName }}"}}),getUser.$inject=["$stateParams","AdminService"]}angular.module("users.admin.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"]}(),function(){"use strict";function routeConfig($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/client/views/settings/settings.client.view.html",controller:"SettingsController",controllerAs:"vm",data:{roles:["user","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/client/views/settings/edit-profile.client.view.html",controller:"EditProfileController",controllerAs:"vm",data:{pageTitle:"Settings"}}).state("settings.password",{url:"/password",templateUrl:"modules/users/client/views/settings/change-password.client.view.html",controller:"ChangePasswordController",controllerAs:"vm",data:{pageTitle:"Settings password"}}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/client/views/settings/manage-social-accounts.client.view.html",controller:"SocialAccountsController",controllerAs:"vm",data:{pageTitle:"Settings accounts"}}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/client/views/settings/change-profile-picture.client.view.html",controller:"ChangeProfilePictureController",controllerAs:"vm",data:{pageTitle:"Settings picture"}}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/client/views/authentication/authentication.client.view.html",controller:"AuthenticationController",controllerAs:"vm"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/client/views/authentication/signup.client.view.html",controller:"AuthenticationController",controllerAs:"vm",data:{pageTitle:"Signup"}}).state("authentication.signin",{url:"/signin?err",templateUrl:"modules/users/client/views/authentication/signin.client.view.html",controller:"AuthenticationController",controllerAs:"vm",data:{pageTitle:"Signin"}}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/client/views/password/forgot-password.client.view.html",controller:"PasswordController",controllerAs:"vm",data:{pageTitle:"Password forgot"}}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/client/views/password/reset-password-invalid.client.view.html",data:{pageTitle:"Password reset invalid"}}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/client/views/password/reset-password-success.client.view.html",data:{pageTitle:"Password reset success"}}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/client/views/password/reset-password.client.view.html",controller:"PasswordController",controllerAs:"vm",data:{pageTitle:"Password reset form"}})}angular.module("users.routes").config(routeConfig),routeConfig.$inject=["$stateProvider"]}(),function(){"use strict";function UserListController($scope,$filter,AdminService){function buildPager(){vm.pagedItems=[],vm.itemsPerPage=15,vm.currentPage=1,vm.figureOutItemsToDisplay()}function figureOutItemsToDisplay(){vm.filteredItems=$filter("filter")(vm.users,{$:vm.search}),vm.filterLength=vm.filteredItems.length;var begin=(vm.currentPage-1)*vm.itemsPerPage,end=begin+vm.itemsPerPage;vm.pagedItems=vm.filteredItems.slice(begin,end)}function pageChanged(){vm.figureOutItemsToDisplay()}var vm=this;vm.buildPager=buildPager,vm.figureOutItemsToDisplay=figureOutItemsToDisplay,vm.pageChanged=pageChanged,AdminService.query(function(data){vm.users=data,vm.buildPager()})}angular.module("users.admin").controller("UserListController",UserListController),UserListController.$inject=["$scope","$filter","AdminService"]}(),function(){"use strict";function UserController($scope,$state,$window,Authentication,user){function remove(user){$window.confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),vm.users.splice(vm.users.indexOf(user),1)):vm.user.$remove(function(){$state.go("admin.users")}))}function update(isValid){if(!isValid)return $scope.$broadcast("show-errors-check-validity","vm.userForm"),!1;var user=vm.user;user.$update(function(){$state.go("admin.user",{userId:user._id})},function(errorResponse){vm.error=errorResponse.data.message})}var vm=this;vm.authentication=Authentication,vm.user=user,vm.remove=remove,vm.update=update}angular.module("users.admin").controller("UserController",UserController),UserController.$inject=["$scope","$state","$window","Authentication","userResolve"]}(),function(){"use strict";function AuthenticationController($scope,$state,$http,$location,$window,Authentication,PasswordValidator){function signup(isValid){return vm.error=null,isValid?void $http.post("/api/auth/signup",vm.credentials).success(function(response){vm.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){vm.error=response.message}):($scope.$broadcast("show-errors-check-validity","vm.userForm"),!1)}function signin(isValid){return vm.error=null,isValid?void $http.post("/api/auth/signin",vm.credentials).success(function(response){vm.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){vm.error=response.message}):($scope.$broadcast("show-errors-check-validity","vm.userForm"),!1)}function callOauthProvider(url){$state.previous&&$state.previous.href&&(url+="?redirect_to="+encodeURIComponent($state.previous.href)),$window.location.href=url}var vm=this;vm.authentication=Authentication,vm.getPopoverMsg=PasswordValidator.getPopoverMsg,vm.signup=signup,vm.signin=signin,vm.callOauthProvider=callOauthProvider,vm.error=$location.search().err,vm.authentication.user&&$location.path("/")}angular.module("users").controller("AuthenticationController",AuthenticationController),AuthenticationController.$inject=["$scope","$state","$http","$location","$window","Authentication","PasswordValidator"]}(),function(){"use strict";function PasswordController($scope,$stateParams,$http,$location,Authentication,PasswordValidator){function askForPasswordReset(isValid){return vm.success=vm.error=null,isValid?void $http.post("/api/auth/forgot",vm.credentials).success(function(response){vm.credentials=null,vm.success=response.message}).error(function(response){vm.credentials=null,vm.error=response.message}):($scope.$broadcast("show-errors-check-validity","vm.forgotPasswordForm"),!1)}function resetUserPassword(isValid){return vm.success=vm.error=null,isValid?void $http.post("/api/auth/reset/"+$stateParams.token,vm.passwordDetails).success(function(response){vm.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){vm.error=response.message}):($scope.$broadcast("show-errors-check-validity","vm.resetPasswordForm"),!1)}var vm=this;vm.resetUserPassword=resetUserPassword,vm.askForPasswordReset=askForPasswordReset,vm.authentication=Authentication,vm.getPopoverMsg=PasswordValidator.getPopoverMsg,vm.authentication.user&&$location.path("/")}angular.module("users").controller("PasswordController",PasswordController),PasswordController.$inject=["$scope","$stateParams","$http","$location","Authentication","PasswordValidator"]}(),function(){"use strict";function ChangePasswordController($scope,$http,Authentication,PasswordValidator){function changeUserPassword(isValid){return vm.success=vm.error=null,isValid?void $http.post("/api/users/password",vm.passwordDetails).success(function(response){$scope.$broadcast("show-errors-reset","vm.passwordForm"),vm.success=!0,vm.passwordDetails=null}).error(function(response){vm.error=response.message}):($scope.$broadcast("show-errors-check-validity","vm.passwordForm"),!1)}var vm=this;vm.user=Authentication.user,vm.changeUserPassword=changeUserPassword,vm.getPopoverMsg=PasswordValidator.getPopoverMsg}angular.module("users").controller("ChangePasswordController",ChangePasswordController),ChangePasswordController.$inject=["$scope","$http","Authentication","PasswordValidator"]}(),function(){"use strict";function ChangeProfilePictureController($scope,$timeout,$window,Authentication,FileUploader){function onAfterAddingFile(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){vm.imageURL=fileReaderEvent.target.result},0)}}}function onSuccessItem(fileItem,response,status,headers){vm.success=!0,vm.user=Authentication.user=response,cancelUpload()}function onErrorItem(fileItem,response,status,headers){cancelUpload(),vm.error=response.message}function uploadProfilePicture(){vm.success=vm.error=null,vm.uploader.uploadAll()}function cancelUpload(){vm.uploader.clearQueue(),vm.imageURL=vm.user.profileImageURL}var vm=this;vm.user=Authentication.user,vm.imageURL=vm.user.profileImageURL,vm.uploadProfilePicture=uploadProfilePicture,vm.cancelUpload=cancelUpload,vm.uploader=new FileUploader({url:"api/users/picture",alias:"newProfilePicture",onAfterAddingFile:onAfterAddingFile,onSuccessItem:onSuccessItem,onErrorItem:onErrorItem}),vm.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}})}angular.module("users").controller("ChangeProfilePictureController",ChangeProfilePictureController),ChangeProfilePictureController.$inject=["$scope","$timeout","$window","Authentication","FileUploader"]}(),function(){"use strict";function EditProfileController($scope,$http,$location,UsersService,Authentication){function updateUserProfile(isValid){if(vm.success=vm.error=null,!isValid)return $scope.$broadcast("show-errors-check-validity","vm.userForm"),!1;var user=new UsersService(vm.user);user.$update(function(response){$scope.$broadcast("show-errors-reset","vm.userForm"),vm.success=!0,Authentication.user=response},function(response){vm.error=response.data.message})}var vm=this;vm.user=Authentication.user,vm.updateUserProfile=updateUserProfile}angular.module("users").controller("EditProfileController",EditProfileController),EditProfileController.$inject=["$scope","$http","$location","UsersService","Authentication"]}(),function(){"use strict";function SocialAccountsController($scope,$http,Authentication){function hasConnectedAdditionalSocialAccounts(){return $scope.user.additionalProvidersData&&Object.keys($scope.user.additionalProvidersData).length}function isConnectedSocialAccount(provider){return vm.user.provider===provider||vm.user.additionalProvidersData&&vm.user.additionalProvidersData[provider]}function removeUserSocialAccount(provider){vm.success=vm.error=null,$http["delete"]("/api/users/accounts",{params:{provider:provider}}).success(function(response){vm.success=!0,vm.user=Authentication.user=response}).error(function(response){vm.error=response.message})}var vm=this;vm.user=Authentication.user,vm.hasConnectedAdditionalSocialAccounts=hasConnectedAdditionalSocialAccounts,vm.isConnectedSocialAccount=isConnectedSocialAccount,vm.removeUserSocialAccount=removeUserSocialAccount}angular.module("users").controller("SocialAccountsController",SocialAccountsController),SocialAccountsController.$inject=["$scope","$http","Authentication"]}(),function(){"use strict";function SettingsController($scope,Authentication){var vm=this;vm.user=Authentication.user}angular.module("users").controller("SettingsController",SettingsController),SettingsController.$inject=["$scope","Authentication"]}(),function(){"use strict";function passwordValidator(PasswordValidator){function link(scope,element,attrs,ngModel){ngModel.$validators.requirements=function(password){var status=!0;if(password){var result=PasswordValidator.getResult(password),requirementsIdx=0,requirementsMeter=[{color:"danger",progress:"20"},{color:"warning",progress:"40"},{color:"info",progress:"60"},{color:"primary",progress:"80"},{color:"success",progress:"100"}];result.errors.length<requirementsMeter.length&&(requirementsIdx=requirementsMeter.length-result.errors.length-1),scope.requirementsColor=requirementsMeter[requirementsIdx].color,scope.requirementsProgress=requirementsMeter[requirementsIdx].progress,result.errors.length?(scope.getPopoverMsg=PasswordValidator.getPopoverMsg(),scope.passwordErrors=result.errors,status=!1):(scope.getPopoverMsg="",scope.passwordErrors=[],status=!0)}return status}}var directive={require:"ngModel",link:link};return directive}angular.module("users").directive("passwordValidator",passwordValidator),passwordValidator.$inject=["PasswordValidator"]}(),function(){"use strict";function passwordVerify(){function link(scope,element,attrs,ngModel){scope.$watch(function(){var combined;return(scope.passwordVerify||ngModel)&&(combined=scope.passwordVerify+"_"+ngModel),combined},function(value){value&&(ngModel.$validators.passwordVerify=function(password){var origin=scope.passwordVerify;return origin===password})})}var directive={require:"ngModel",scope:{passwordVerify:"="},link:link};return directive}angular.module("users").directive("passwordVerify",passwordVerify)}(),function(){"use strict";function lowercase(){function link(scope,element,attrs,modelCtrl){modelCtrl.$parsers.push(function(input){return input?input.toLowerCase():""}),element.css("text-transform","lowercase")}var directive={require:"ngModel",link:link};return directive}angular.module("users").directive("lowercase",lowercase)}(),function(){"use strict";function Authentication($window){var auth={user:$window.user};return auth}angular.module("users.services").factory("Authentication",Authentication),Authentication.$inject=["$window"]}(),function(){"use strict";function PasswordValidator($window){function getResult(password){var result=owaspPasswordStrengthTest.test(password);return result}function getPopoverMsg(){var popoverMsg="Please enter a passphrase or password with 10 or more characters, numbers, lowercase, uppercase, and special characters.";return popoverMsg}var owaspPasswordStrengthTest=$window.owaspPasswordStrengthTest,service={getResult:getResult,getPopoverMsg:getPopoverMsg};return service}angular.module("users.services").factory("PasswordValidator",PasswordValidator),PasswordValidator.$inject=["$window"]}(),function(){"use strict";function UsersService($resource){return $resource("api/users",{},{update:{method:"PUT"}})}function AdminService($resource){return $resource("api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}angular.module("users.services").factory("UsersService",UsersService),UsersService.$inject=["$resource"],angular.module("users.admin.services").factory("AdminService",AdminService),AdminService.$inject=["$resource"]}();